<Grid Name="MainGrid" Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" Name="LeftButtonsColumn" MinWidth="0"/>
            <ColumnDefinition Width="Auto" Name="SpacerColumn"/>
            <ColumnDefinition Width="*" Name="RightButtonsColumn" MinWidth="0"/>
        </Grid.ColumnDefinitions>

        <UniformGrid Rows="1" Grid.Column="0" Name="LeftPanel" HorizontalAlignment="Stretch"/>

        <Border Grid.Column="1" Name="TheSpacer"
                Background="LightGray"
                Width="80"
                MinWidth="0"
                HorizontalAlignment="Stretch" />

        <UniformGrid Rows="1" Grid.Column="2" Name="RightPanel" HorizontalAlignment="Stretch"/>
    </Grid>

public partial class MainWindow : Window
{
    private double originalLeftGroupWidth;
    private double originalRightGroupWidth;
    
    public MainWindow()
    {
        InitializeComponent();
        
        this.Loaded += (s, e) => {
            // Store original sizes
            originalLeftGroupWidth = leftButtonGroup.ActualWidth;
            originalRightGroupWidth = rightButtonGroup.ActualWidth;
            
            // Add SizeChanged handler to implement custom sizing logic
            this.SizeChanged += MainWindow_SizeChanged;
        };
    }
    
    private void MainWindow_SizeChanged(object sender, SizeChangedEventArgs e)
    {
        double availableWidth = mainGrid.ActualWidth;
        double minRequiredWidth = originalLeftGroupWidth + originalRightGroupWidth;
        
        // Behavior 1: When there's enough space, keep buttons at original size
        // and put space between them
        if (availableWidth >= minRequiredWidth)
        {
            leftButtonGroup.Width = originalLeftGroupWidth;
            rightButtonGroup.Width = originalRightGroupWidth;
            // The middle column (*) automatically gets remaining space
        }
        // Behavior 2: When space is tight, shrink buttons uniformly
        else
        {
            double ratio = availableWidth / minRequiredWidth;
            leftButtonGroup.Width = originalLeftGroupWidth * ratio;
            rightButtonGroup.Width = originalRightGroupWidth * ratio;
        }
    }
}
