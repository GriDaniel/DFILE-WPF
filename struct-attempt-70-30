<Grid Name="mainGrid">
    <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" MinWidth="0" />
        <ColumnDefinition Width="Auto" />
    </Grid.ColumnDefinitions>
    
    <StackPanel Grid.Column="0" Orientation="Horizontal" Name="leftButtonGroup">
        <!-- Left side buttons -->
        <Button Content="Button 1" Margin="2" />
        <Button Content="Button 2" Margin="2" />
    </StackPanel>
    
    <StackPanel Grid.Column="2" Orientation="Horizontal" Name="rightButtonGroup">
        <!-- Right side buttons -->
        <Button Content="Button 3" Margin="2" />
        <Button Content="Button 4" Margin="2" />
    </StackPanel>
</Grid>

public partial class MainWindow : Window
{
    private double originalLeftGroupWidth;
    private double originalRightGroupWidth;
    
    public MainWindow()
    {
        InitializeComponent();
        
        this.Loaded += (s, e) => {
            // Store original sizes
            originalLeftGroupWidth = leftButtonGroup.ActualWidth;
            originalRightGroupWidth = rightButtonGroup.ActualWidth;
            
            // Add SizeChanged handler to implement custom sizing logic
            this.SizeChanged += MainWindow_SizeChanged;
        };
    }
    
    private void MainWindow_SizeChanged(object sender, SizeChangedEventArgs e)
    {
        double availableWidth = mainGrid.ActualWidth;
        double minRequiredWidth = originalLeftGroupWidth + originalRightGroupWidth;
        
        // Behavior 1: When there's enough space, keep buttons at original size
        // and put space between them
        if (availableWidth >= minRequiredWidth)
        {
            leftButtonGroup.Width = originalLeftGroupWidth;
            rightButtonGroup.Width = originalRightGroupWidth;
            // The middle column (*) automatically gets remaining space
        }
        // Behavior 2: When space is tight, shrink buttons uniformly
        else
        {
            double ratio = availableWidth / minRequiredWidth;
            leftButtonGroup.Width = originalLeftGroupWidth * ratio;
            rightButtonGroup.Width = originalRightGroupWidth * ratio;
        }
    }
}
